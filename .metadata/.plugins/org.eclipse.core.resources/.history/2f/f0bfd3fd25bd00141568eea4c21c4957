// Main Window Info
var mainWindow = Ti.UI.createWindow({
	backgroundColor: '#343434'
});

// Main View Info
var banner = Ti.UI.createView({
	width: Titanium.UI.FILL, 
	height: 125,
	top: 20,
	layout: 'Horizontal',
	backgroundColor: '#3a9425'
});

if (Ti.Platform.osname === 'android'){

var title = Ti.UI.createLabel({
	text: 'In Theaters Now',
	font: { fontSize: 36, fontWeight: 'bold', fontStyle: 'roboto' },
	color: '#fff',
	textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER
});

var logo1 = Ti.UI.createImageView({
	width: 160,
	height: 120,
	image: 'http://www.userlogos.org/files/logos/jumpordie/rottentomatoes_03.png',
	left: 20
});

var logo2 = Ti.UI.createImageView({
	width: 160,
	height: 120,
	image: 'http://www.userlogos.org/files/logos/jumpordie/rottentomatoes_03.png',
	right: 20
});

} else {
	
	var title = Ti.UI.createLabel({
	text: 'In Theaters Now',
	font: { fontSize: 36, fontWeight: 'bold', fontStyle: 'roboto' },
	color: '#fff',
	textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER
});

var logo1 = Ti.UI.createImageView({
	width: 160,
	height: 120,
	image: 'http://www.userlogos.org/files/logos/jumpordie/rottentomatoes_03.png',
	left: 75
});

var logo2 = Ti.UI.createImageView({
	width: 160,
	height: 120,
	image: 'http://www.userlogos.org/files/logos/jumpordie/rottentomatoes_03.png',
	right: 20
});
	
}

// Main View Info
var mainView = Ti.UI.createScrollView({
	left: 0,
	width: '75%',
	height: Ti.UI.SIZE,
	top: banner.height + banner.top,
	backgroundColor: '#343434',
	//backgroundColor: '#665c5c',
	layout: 'vertical',
});

var splat = Ti.UI.createImageView({
	top: 200,
	height: 500,
	width: 500,
	image: 'http://d3biamo577v4eu.cloudfront.net/static/images/trademark/rotten.png'
});
	
Ti.Gesture.addEventListener('shake',function(e) {
	
	mainWindow.add(splat);
		
	setTimeout(function(){
	    
	    mainWindow.remove(splat);
	    
	}, 5000);
	
});


Ti.Gesture.addEventListener('shake',function(e) {
	
function printEventDetails(eventID) {
    Ti.API.info('eventID:' + eventID);
    var defCalendar = Ti.Calendar.defaultCalendar;
    var eventFromCalendar = defCalendar.getEventById(eventID);
    if (eventFromCalendar != null) {
        Ti.API.info('Printing event values ::');
        Ti.API.info('title : '+ eventFromCalendar.title);
        Ti.API.info('notes : ' + eventFromCalendar.notes);
        Ti.API.info('location:' + eventFromCalendar.location);
        Ti.API.info('allDay ? :' + eventFromCalendar.allDay);
        Ti.API.info('status : '+ eventFromCalendar.status);
        Ti.API.info('availability : '+ eventFromCalendar.availability);
        Ti.API.info('hasAlarm ? : '+ eventFromCalendar.hasAlarm);
        Ti.API.info('id : '+ eventFromCalendar.id);
        Ti.API.info('isDetached ? : '+ eventFromCalendar.isDetached);
        Ti.API.info('begin : '+ eventFromCalendar.begin);
        Ti.API.info('end : '+ eventFromCalendar.end);
        var eventRule = eventFromCalendar.recurrenceRules;
        Ti.API.info("recurrenceRules : " + eventRule);
        for (var i = 0; i < eventRule.length; i++) {
            Ti.API.info("Rule # "+ i);
            Ti.API.info('frequency : ' + eventRule[i].frequency);
            Ti.API.info('interval : ' + eventRule[i].interval);
            Ti.API.info('daysofTheWeek : ' );
            var daysofTheWeek = eventRule[i].daysOfTheWeek; 
            for (var j = 0; j < daysofTheWeek.length; j++) {
                Ti.API.info('{ dayOfWeek : '+ daysofTheWeek[j].dayOfWeek +'weekNumber : '+daysofTheWeek[j].week +'}, ');
            }
            Ti.API.info('firstDayOfTheWeek : ' + eventRule[i].firstDayOfTheWeek);
            Ti.API.info('daysOfTheMonth : ');
            var daysOfTheMonth = eventRule[i].daysOfTheMonth;
            for(var j=0;j<daysOfTheMonth.length;j++) {
                Ti.API.info(' ' + daysOfTheMonth[j]);
            }
            Ti.API.info('daysOfTheYear : ');
            var daysOfTheYear = eventRule[i].daysOfTheYear;
            for(var j=0;i<daysOfTheYear.length;j++) {
                Ti.API.info(' ' + daysOfTheYear[j]);
            }
            Ti.API.info('weeksOfTheYear : ');
            var weeksOfTheYear = eventRule[i].weeksOfTheYear;
            for(var j=0;j<weeksOfTheYear.length;j++) {
                Ti.API.info(' ' + weeksOfTheYear[j]);
            }
            Ti.API.info('monthsOfTheYear : ');
            var monthsOfTheYear = eventRule[i].monthsOfTheYear;
            for(var j=0;j<monthsOfTheYear.length;j++) {
                Ti.API.info(' ' + monthsOfTheYear[j]);
            }
            Ti.API.info('daysOfTheYear : ');
            var setPositions = eventRule[i].setPositions;
            for(var j=0;j<setPositions.length;j++) {
                Ti.API.info(' ' + setPositions[j]);
            }
        };
        Ti.API.info('alerts : '+ eventFromCalendar.alerts);
        var newAlerts = eventFromCalendar.alerts;
        
        for(var i=0 ; i < newAlerts.length ; i++) {
            Ti.API.info('*****ALert '+ i);
            Ti.API.info('absoluteDate :'+ newAlerts[i].absoluteDate);
            Ti.API.info('relativeOffset ;' + newAlerts[i].relativeOffset);
        }
   }
}
function performCalendarWriteFunctions(){
    var defCalendar = Ti.Calendar.defaultCalendar;
    var date1 = new Date(new Date().getTime() + 3000),
        date2 = new Date(new Date().getTime() + 900000);
    Ti.API.info('Date1 : '+ date1 + 'Date2 : '+ date2);
    var event1 = defCalendar.createEvent({
                        title: 'Movies available this week.',
                        notes: 'Here is the list of available movies for this week.',
                        location: 'Appcelerator Inc',
                        begin: date1,
                        end: date2,
                        availability: Ti.Calendar.AVAILABILITY_FREE,
                        allDay: true,
                });
    var alert1 = event1.createAlert({
                        absoluteDate: new Date(new Date().getTime() - (1000*60*20))
                });
    var alert2 = event1.createAlert({
        relativeOffset:-(60*15)
    });
    var allAlerts = new Array(alert1,alert2);
    event1.alerts = allAlerts;
    var newRule = event1.createRecurenceRule({
                        frequency: Ti.Calendar.RECURRENCEFREQUENCY_MONTHLY,
                        interval: 1,
                        daysOfTheWeek: [{dayOfWeek:1,week:2},{dayOfWeek:2}],
                        end: {occurrenceCount:10}
                });
    Ti.API.info('newRule : '+ newRule);
    event1.recurrenceRules = [newRule];
    Ti.API.info('Going to save event now');
    event1.save(Ti.Calendar.SPAN_THISEVENT);
    Ti.API.info('Done with saving event,\n Now trying to retreive it.');
    printEventDetails(event1.id);
}
var win = Ti.UI.createWindow({
                        backgroundColor: 'white',
                        title: 'Calendar Demo'
            });

var label = Ti.UI.createLabel({
                        text: 'Check console log',
                        height: Ti.UI.size,
                        width: Ti.UI.size
            });
win.add(label);

if(Ti.Calendar.eventsAuthorization == Ti.Calendar.AUTHORIZATION_AUTHORIZED) {
    performCalendarWriteFunctions();
} else {
    Ti.Calendar.requestEventsAuthorization(function(e){
            if (e.success) {
                performCalendarWriteFunctions();
            } else {
                alert('Access to calendar is not allowed');
            }
        });
}
win.open();
});

/*
var nameIcon = Ti.UI.createImageView({
	image: 'http://img1.wikia.nocookie.net/__cb20111027001559/logopedia/images/1/1a/Rotten_tomatoes_logo.png',
	bottom: 20
});
*/

// Builds UI with Remote Data
exports.buildUI = function(obj){
	
	// Logs obj into a string
	console.log('obj: ' + JSON.stringify(obj));
	
	for (i=0, j=obj.length; i<j; i++) {
		
		
	var movieName = Ti.UI.createLabel({
		font: { fontSize: 22, fontWeight: 'bold', fontStyle: 'roboto' },
		color: '#fff',
		left: 15,
		top: 10,
		textAlign: Ti.UI.TEXT_ALIGNMENT_LEFT
	});
	
	var year = Ti.UI.createLabel({
		font: { fontSize: 16, fontStyle: 'roboto' },
		color: '#fff',
		left: 15,
		top: 10,
		textAlign: Ti.UI.TEXT_ALIGNMENT_LEFT
	});
	
	var mpaa_rating = Ti.UI.createLabel({
		font: { fontSize: 16, fontStyle: 'roboto' },
		color: '#fff',
		left: 15,
		top: 1,
		textAlign: Ti.UI.TEXT_ALIGNMENT_LEFT
	});
	
	var runtime = Ti.UI.createLabel({
		font: { fontSize: 16, fontStyle: 'roboto' },
		color: '#fff',
		left: 15,
		top: 1,
		textAlign: Ti.UI.TEXT_ALIGNMENT_LEFT
	});
	
	var synopsis = Ti.UI.createLabel({
	font: { fontSize: 16, fontStyle: 'roboto' },
		color: '#fff',
		left: 15,
		top: 20,
		textAlign: Ti.UI.TEXT_ALIGNMENT_LEFT
	});
	
	var criticsRating = Ti.UI.createLabel({
		font: { fontSize: 16, fontStyle: 'roboto' },
		color: '#fff',
		left: 15,
		top: 20,
		textAlign: Ti.UI.TEXT_ALIGNMENT_LEFT
	});
	
	var criticsScore = Ti.UI.createLabel({
		font: { fontSize: 16, fontStyle: 'roboto' },
		color: '#fff',
		left: 15,
		top: 1,
		textAlign: Ti.UI.TEXT_ALIGNMENT_LEFT
	});
	
	var audienceRating = Ti.UI.createLabel({
		font: { fontSize: 16, fontStyle: 'roboto' },
		color: '#fff',
		left: 15,
		top: 1,
		textAlign: Ti.UI.TEXT_ALIGNMENT_LEFT
	});
	
	var audienceScore = Ti.UI.createLabel({
		font: { fontSize: 16, fontStyle: 'roboto' },
		color: '#fff',
		left: 15,
		top: 1,
		textAlign: Ti.UI.TEXT_ALIGNMENT_LEFT
	});
	
	var poster = Ti.UI.createImageView({
		left: 15,
		top: 75,
		height: 164,
		width: 118
	});

	movieName.text = obj[i].movieName;
	criticsRating.text = 'CRITICS RATING: ' + obj[i].criticsRating;
	criticsScore.text = 'CRITICS SCORE: ' + obj[i].criticsScore;
	audienceRating.text = 'AUDIENCE RATING: ' + obj[i].audienceRating;
	audienceScore.text = 'AUDIENCE SCORE: ' + obj[i].audienceScore;
	poster.image = obj[i].poster;
	year.text = 'YEAR: ' + obj[i].year;
	mpaa_rating.text = 'MPAA RATING: ' + obj[i].mpaa_rating;
	runtime.text = 'RUNTIME: ' + obj[i].runtime + ' min';
	synopsis.text = 'SYNOPSIS: ' + obj[i].synopsis;
	
	mainView.add(poster);
	
	mainView.add(movieName);

	mainView.add(year);
	mainView.add(mpaa_rating);
	mainView.add(runtime);
	
	mainView.add(synopsis);
	
	mainView.add(criticsRating);
	mainView.add(criticsScore);
	mainView.add(audienceRating);
	mainView.add(audienceScore);
	
	
	console.log(criticsRating.text);
	
	}
	
};

banner.add(logo1);
banner.add(title);
banner.add(logo2);

//mainView.add(nameIcon);

mainWindow.add(banner);
mainWindow.add(mainView);
//mainWindow.add(nameIcon);

mainWindow.open();